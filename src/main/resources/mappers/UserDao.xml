<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncoxs.myblog.dao.mysql.UserDao">

    <resultMap id="BaseResultMap" type="com.ncoxs.myblog.model.pojo.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="limit_time" jdbcType="TIMESTAMP" property="limitTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>

    <sql id="AllColumns">
        id, `name`, `type`, `password`, email, salt, `status`, limit_time, create_time, modify_time
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="AllColumns"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByName" resultType="com.ncoxs.myblog.model.pojo.User">
        select <include refid="AllColumns"/>
        from user where name=#{name} and `status` != 4
    </select>

    <select id="existsName" resultType="java.lang.Boolean">
        select count(*) from user where name=#{name} and `status` != 4
    </select>

    <select id="existsEmail" resultType="java.lang.Boolean">
        select count(*) from user where email=#{email} and `status` != 4
    </select>

    <select id="existsByNameEmail" resultType="java.lang.Boolean">
        select count(*) from user where name=#{name} and email=#{email} and `status` != 4
    </select>

    <select id="selectByIdentity" resultType="com.ncoxs.myblog.model.pojo.User">
        select <include refid="AllColumns"/>
        from user
        where id=(select user_id from user_identity where identity=#{identity}<if test="source != null"> and source=#{source}</if>)
              and `status` != 4
    </select>

    <select id="selectByEmail" resultType="com.ncoxs.myblog.model.pojo.User">
        select <include refid="AllColumns"/>
        from user
        where email=#{email} and `status` != 4
    </select>

    <select id="existsByEmailPassword" resultType="java.lang.Boolean">
        select count(*)
        from user
        where email=#{email} and password=md5(concat(#{password}, salt)) and `status` != 4
    </select>

    <select id="existsByNamePassword" resultType="java.lang.Boolean">
        select count(*)
        from user
        where name=#{name} and password=md5(concat(#{password}, salt)) and `status` != 4
    </select>

    <delete id="deleteById">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByName">
        delete from user where name=#{name}
    </delete>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ncoxs.myblog.model.pojo.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `name`,
            `type`,
            `password`,
            email,
            salt,
            `status`,
            <if test="limitTime != null">
                limit_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        select
        <trim suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{type},
            #{password},
            #{email,jdbcType=VARCHAR},
            #{salt},
            #{status},
            <if test="limitTime != null">
                #{limitTime},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        from dual
        # 防止多线程下重复插入，已注销用户的名称和邮箱可以被其他用户注册
        where not exists(select name, email from user where name=#{name} or email=#{email} and `status` != 4)
    </insert>

    <update id="updateByIdSelective" parameterType="com.ncoxs.myblog.model.pojo.User">
        update user
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="password != null">
                `password` = #{password},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="limitTime != null">
                limit_time = #{limitTime},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>